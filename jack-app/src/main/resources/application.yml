server:
  port: 8889
spring:
  rabbitmq:
    listener:
      simple:
        acknowledge-mode: manual  # 手动确定（默认自动确认） 消费者开启手动ack消息确认，需要测试请看示例请AckConsumer,所有队列都会生效
        max-concurrency: 10      # 消费端的监听个数(即@RabbitListener开启几个线程去处理数据。) 并发消费：每个侦听器线程的最大数量，具体数值根据系统性能配置（一般为系统cpu核数*2）
        concurrency: 5          # 并发消费：每个侦听器线程的最小数量，具体数值根据系统性能配置（一般为系统cpu核数）
        default-requeue-rejected: false #设置为false，会重发消息到死信队列（防止手动ack确认失败的消息堆积），需要测试请示例AckConsumer,所有队列都会生效
        retry:
          enabled: true # 解决消息死循环问题-启用重试
          max-attempts: 3 # 最大重试3次(默认)，超过就丢失（或放到死信队列中，防止消息堆积）
          initial-interval: 3000 # 第一次和第二次之间的重试间隔，后面的用乘子计算 3s 6s 12s
          multiplier: 2   # 乘子
          max-interval: 16000  # 最大重试时间间隔16s
    host: 81.71.119.229
    port: 5672
    username: guest
    password: guest
    #publisher-confirms: true # 开启消息发送确认机制,低版本(一般在生产端，消费端加上也没关系)
    publisher-confirm-type: correlated #开启消息发送确认机制(一般在生产端，消费端加上也没关系)
  redis:
    host: 81.71.119.229
    port: 6379
    username: root
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://81.71.119.229:3306/jack_app?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai&useSSL=false
      username: root
      password: 123456
      #配置监控统计拦截的filters，去掉后监控界面SQL无法进行统计，wall用于防火墙
      filters: stat,wall,config
      #最大支持连接数
      max-active: 100
      #最小连接数
      min-idle: 10
      #初始化大小
      initial-size: 10
      #获取连接等待超时时间
      max-wait: 600000
      #间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 600000
      #一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #验证连接有效SQL
      validation-query: select 'x'
      #申请连接时执行validationQuery检测连接是否有效
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效
      test-on-return: false
      #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      #开启缓存
      pool-prepared-statements: true
      #指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 5000
      stat-view-servlet:
        enabled: true
        login-username: root
        login-password: 123456
        allow: 172.16.48.30
    name: druidDataSource
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml

weiXin:
  appId: ww1f8fa70ad06fd604
  secret: aaq5Txy6KgGTWkWGo3uKyfc5at1hLZb1L76EKzdT3NQ
  agentId: 1000044

app:
  common:
    hostPath: D:\app\uploadFile\

# 发布与订阅模式
fanout:
  # 交换机
  exchange: fanout-exchange
  # 队列名称
  sms:
    queue: fanout-sms-queue
  weixin:
    queue: fanout-weixin-queue

# 路由模式
direct:
  # 交换机
  exchange: direct-exchange
  # 队列名称
  info:
    queue: direct-info-queue
  error:
    queue: direct-error-queue
  all:
    queue: direct-all-queue

# 主题模式
topic:
  # 交换机
  exchange: topic-exchange
  # 配置队列名称
  info:
    queue: topic-info-queue
  error:
    queue: topic-error-queue
  full:
    queue: topic-full-queue

# 主题模式下的ack确认+死信队列
topicAck:
  # 交换机
  exchange: sales_exchange
  # 配置队列名称
  ack:
    queue: sales_queue
# 死信队列
dead:
  # 交换机
  exchange: sales_dead_exchange
  # 配置队列名称
  queue: sales_dead_queue
