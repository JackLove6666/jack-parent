<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cloud.jack.gen.mapper.GenTableSchemaMapper">

    <resultMap id="genTableSchemaMap" type="com.cloud.jack.gen.entity.GenTableSchema">
        <id property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="tableCat" column="table_cat"/>
        <result property="tableName" column="table_name"/>
        <result property="remarks" column="remarks"/>
        <result property="className" column="class_name"/>
        <result property="packages" column="packages"/>
        <result property="module" column="module"/>
        <result property="author" column="author"/>
        <result property="date" column="date"/>
    </resultMap>

    <select id="getAllDatabase" resultType="java.lang.String">
        SELECT
            SCHEMA_NAME AS 'tableCat'
        FROM
            information_schema.SCHEMATA
        WHERE
            SCHEMA_NAME NOT LIKE 'mysql%'
          AND SCHEMA_NAME NOT LIKE '%_schema'
          AND SCHEMA_NAME NOT LIKE 'sys'
    </select>

    <select id="getAllTables" resultType="com.cloud.jack.gen.entity.Tables" >
        SELECT
            table_name AS tableName,
            table_comment AS remarks,
            create_time,
            update_time,
            table_schema AS tableCat
        FROM
            information_schema.TABLES
        WHERE
            table_name NOT LIKE 'qrtz_%'
          AND table_name NOT LIKE 'gen_%'
          AND table_schema = (#{tableCat} )
    </select>

    <select id="getAllColumns" resultType="com.cloud.jack.gen.entity.Columns" >
        SELECT
            column_name AS columnName,
            ( CASE WHEN ( is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI' ) THEN '1' ELSE NULL END ) AS required,
            ( CASE WHEN column_key = 'PRI' THEN '1' ELSE '0' END ) AS pk,
            ordinal_position AS sort,
            column_comment AS columnComment,
            ( CASE WHEN extra = 'auto_increment' THEN '1' ELSE '0' END ) AS incremented,
            column_type AS columnType
        FROM
            information_schema.COLUMNS
        WHERE
            1 = 1
          AND table_schema = ( #{tableCat} )
          AND table_name = ( #{tableName} )
        ORDER BY
            ordinal_position;
    </select>
</mapper>
